import L from 'leaflet';

const ICON_DIMENSIONS = [22, 34];
const LARGE_ICON_DIMENSSIONS = ICON_DIMENSIONS.map((i) => i * 1.5);
const getIconAnchor = (dimensions: any[]) => [dimensions[0] / 2, dimensions[1]];

const getSVGHTML = ({ isUseOurLoosCampaign, isHighlighted }) => {
  if (isUseOurLoosCampaign) {
    if (isHighlighted) {
      return `
        <svg viewBox="0 0 92 148" xmlns="http://www.w3.org/2000/svg">
          <path fill="#ED3D63" d="M92.13 46.83c0 43.77-45.56 100.84-45.56 100.84S1 90.6 1 46.83C.756 30.39 9.387 15.094 23.585 6.803c14.198-8.29 31.762-8.29 45.96 0C83.743 15.094 92.374 30.39 92.13 46.83z" stroke="white" stroke-width="4"/>
          <path fill="#FFF" d="M71.67 60.5h.66c-.183-.05-.377-.05-.56 0h-4.16c-.032-.012-.068-.012-.1 0h.56c.063-.01.127-.01.19 0h.86-21.74c-.029-.013-.061-.013-.09 0h-.74c.032-.012.068-.012.1 0H35.68c-.07-.192-.09-.398-.06-.6v-22-10.53c.036-.618-.185-1.223-.612-1.672-.426-.45-1.019-.702-1.638-.698h-10c-.126-.02-.255.008-.36.08-1.024.19-1.748 1.11-1.69 2.15v32.59c-.023 1.41.55 2.765 1.58 3.73.806.892 1.907 1.463 3.1 1.61.3 0 .39.15.41.47.096 1.996.794 3.917 2 5.51v.14c1.459 1.865 3.07 3.604 4.82 5.2.59.63 1.17 1.27 1.78 1.88.699.75 1.306 1.578 1.81 2.47.015.061.036.122.06.18.966 1.918.832 4.207-.35 6-.143.28-.418.467-.73.5-.873.084-1.53.833-1.5 1.71.03.583.03 1.167 0 1.75 0 .45.1.58.56.58h29.38c.19 0 .38.07.37-.24v-2.28c-.042-.756-.618-1.375-1.37-1.47-.845-.072-1.596-.565-2-1.31-.92-1.39-1.356-3.046-1.24-4.71-.034-.971.485-1.878 1.34-2.34.117-.081.227-.172.33-.27 1.425-1.012 2.689-2.232 3.75-3.62 1.156-1.355 2.103-2.875 2.81-4.51.768-1.647 1.213-3.426 1.31-5.24 0-.25 0-.34-.3-.33H36.59c-1.1 0-1.1 0-.91-1.11h35.88c.918-.07 1.639-.815 1.68-1.734.04-.92-.612-1.725-1.52-1.876l-.05-.01zm-13.5 30.81v.12c-.036-.035-.067-.075-.09-.12h.09zm-.7 0v.12c-.036-.035-.067-.075-.09-.12h.09z"/>
          <path fill="#FFF" d="M55.08 26.4L59.28 34.91 68.66 36.27 61.87 42.89 63.48 52.24 55.08 47.82 46.69 52.24 48.29 42.89 41.5 36.27 50.89 34.91z"/>
        </svg>
      `;
    }

    return `
      <svg viewBox="0 0 74 120" xmlns="http://www.w3.org/2000/svg">
        <path fill="#ED3D63" d="M74.73 38.08c0 35.42-36.86 81.59-36.86 81.59S1 73.5 1 38.08C.78 24.765 7.759 12.366 19.255 5.644c11.496-6.722 25.724-6.722 37.22 0 11.496 6.722 18.474 19.12 18.255 32.436z" stroke="white" stroke-width="4"/>
        <path fill="#FFF" d="M58.18 49.14h.53c-.147-.04-.303-.04-.45 0h-3.33c-.026-.01-.054-.01-.08 0h.46c.05-.01.1-.01.15 0h.69-17.63c-.023-.008-.047-.008-.07 0h-.57c.026-.011.054-.011.08 0h-8.92c-.04-.16-.04-.33 0-.49V30.81v-8.52c.01-.486-.175-.956-.516-1.302-.341-.347-.808-.54-1.294-.538h-8.12c-.104-.015-.21.006-.3.06-.824.159-1.405.902-1.36 1.74v26.37c-.01 1.135.454 2.222 1.28 3 .659.72 1.552 1.18 2.52 1.3.24 0 .32.12.33.38.078 1.611.63 3.163 1.59 4.46v.11c1.181 1.509 2.486 2.917 3.9 4.21.48.51.95 1 1.44 1.52.563.61 1.056 1.28 1.47 2-.01.046-.01.094 0 .14.765 1.548.654 3.385-.29 4.83-.11.23-.336.382-.59.4-.654.123-1.121.705-1.1 1.37.03.473.03.947 0 1.42 0 .37.08.47.46.47h23.71c.14 0 .3 0 .3-.2v-1.84c-.031-.621-.511-1.127-1.13-1.19-.686-.059-1.298-.456-1.63-1.06-.726-1.11-1.077-2.425-1-3.75-.044-.788.379-1.528 1.08-1.89.095-.062.183-.136.26-.22 1.147-.813 2.16-1.802 3-2.93.937-1.093 1.705-2.32 2.28-3.64.622-1.335.979-2.779 1.05-4.25 0-.2 0-.27-.24-.26H29.77c-.89 0-.89 0-.74-.9h29.02c.75-.048 1.342-.652 1.375-1.402.034-.75-.503-1.404-1.245-1.518v-.04z"/>
      </svg>
    `;
  }

  return `
    <svg viewBox="-1 -1 21 33" xmlns="http://www.w3.org/2000/svg">
      <path d="M10 0C4.47632 0 0 4.47529 0 10C0 19.5501 10 32 10 32C10 32 20 19.5501 20 10C20 4.47529 15.5237 0 10 0Z" fill="#ED3D63" stroke="white"/>
      ${
        isHighlighted
          ? '<path d="M10 4L11.7634 7.57295L15.7063 8.1459L12.8532 10.9271L13.5267 14.8541L10 13L6.47329 14.8541L7.14683 10.9271L4.29366 8.1459L8.23664 7.57295L10 4Z" fill="white"/>'
          : '<circle cx="10" cy="10" r="5" fill="white"/>'
      }
    </svg>
  `;
};

const ToiletMarkerIcon = L.DivIcon.extend({
  options: {
    highlight: false,
    toiletId: null,
    isUseOurLoosCampaign: false,
  },

  initialize: function (options: {
    isHighlighted: any;
    toiletId?: any;
    isUseOurLoosCampaign: any;
  }) {
    this.options = {
      ...this.options,
      iconSize: options.isHighlighted
        ? LARGE_ICON_DIMENSSIONS
        : ICON_DIMENSIONS,
      iconAnchor: options.isHighlighted
        ? getIconAnchor(LARGE_ICON_DIMENSSIONS)
        : getIconAnchor(ICON_DIMENSIONS),
      html: `
        <div data-testid="toiletMarker:${options.toiletId}">
          ${getSVGHTML(options)}
        </div>
      `,
    };

    L.Util.setOptions(this, options);
  },
});

export default ToiletMarkerIcon;
