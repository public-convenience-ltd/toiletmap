name: E2E Cypress Tests (Firefox)
on:
  push: []
  pull_request:
    types: ['review_requested']
  pull_request_target:
    types: [labeled]
jobs:
  cypress-e2e-firefox:
    name: Cypress E2E Firefox
    runs-on: ubuntu-latest
    # Only run the e2e tests if a maintainer has labeled the PR as 'safe to test'.
    if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    timeout-minutes: 15
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 4 copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: CacheAreas
        id: cache-areas
        uses: actions/cache@v3
        with:
          path: ./src/api/db/manage/areaToDatabase/.areaInfo.geojson
          key: ${{ runner.os }}-areaInfo
      - run: yarn
      - run: yarn startMemoryMongo & yarn wait-on:memoryMongo
      - name: NextCache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          MONGODB_URI: mongodb://localhost:27017/toiletmap
          DATABASE_NAME: toiletmap
          VERCEL_URL: http://localhost:3000
          AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
          AUTH0_ISSUER_BASE_URL: https://gbptm.eu.auth0.com/
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: https://www.toiletmap.org.uk/graphql
          AUTH0_PERMISSIONS_KEY: https://toiletmap.org.uk/permissions
          AUTH0_PROFILE_KEY: https://toiletmap.org.uk/profile
          CYPRESS_auth0SessionCookieName: 'appSession'
          CYPRESS_auth0Username: ${{ secrets.CYPRESS_AUTH0USERNAME }}
          CYPRESS_auth0Password: ${{ secrets.CYPRESS_AUTH0PASSWORD }}
          CYPRESS_auth0Scope: 'openid profile email'
          CYPRESS_auth0Domain: 'gbptm.eu.auth0.com'
          CYPRESS_auth0Audience: https://www.toiletmap.org.uk/graphql
          CYPRESS_auth0ClientSecret: ${{ secrets.CYPRESS_AUTH0CLIENTSECRET }}
          CYPRESS_auth0ClientId: ${{ secrets.CYPRESS_AUTH0CLIENTID }}
          CYPRESS_auth0CookieSecret: ${{ secrets.CYPRESS_AUTH0COOKIESECRET }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          ENABLE_REDIS_CACHE: true
          REDIS_URI: localhost
          REDIS_PASSWORD: ''
          REDIS_PORT: 6379
        with:
          build: yarn build
          start: yarn start
          wait-on: 'http://localhost:3000/'
          wait-on-timeout: 60
          browser: firefox
          headless: true
          spec: cypress/e2e/**/*.ts
          record: true
          parallel: true
          group: 2. Firefox
